@using System.Timers
@using System.ComponentModel
@using MqttClient.Blazor.Data
@page "/mqttview"
@inject IJSRuntime jsRuntime

<h3>MqttView</h3>

<ul style="list-style: none">
    @foreach (var subscription in _subscriptions)
    {
        <li>
            <div style="padding: 10px">
                <p>@subscription.Topic</p>
                <p>@subscription.Value</p>
            </div>
        </li>
    }
</ul>

<input placeholder="Add subscription" @bind="_newSubscription" />
<button @onclick="AddSubscriptionAsync">Add subscription</button>



@code {

    string _newSubscription;

    BindingList<Subscription> _subscriptions = new BindingList<Subscription>();

    private void _subscriptions_ListChanged(object sender, ListChangedEventArgs e)
    {
        this.StateHasChanged();
    }

    protected override void OnInitialized()
    {
        _subscriptions.ListChanged += _subscriptions_ListChanged;
    }

    private async Task AddSubscriptionAsync()
    {
        var sub = new Subscription(_newSubscription, jsRuntime) { Value = "---no value---" };
        await sub.InitializeAsync();
        _subscriptions.Add(sub);
        _newSubscription = string.Empty;
    }

}
